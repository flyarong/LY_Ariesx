// Code generated by protoc-gen-go. DO NOT EDIT.
// source: models.proto

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Resources struct {
	Food             *int32 `protobuf:"varint,1,req,name=Food" json:"Food,omitempty"`
	Lumber           *int32 `protobuf:"varint,2,req,name=Lumber" json:"Lumber,omitempty"`
	Marble           *int32 `protobuf:"varint,3,req,name=Marble" json:"Marble,omitempty"`
	Steel            *int32 `protobuf:"varint,4,req,name=Steel" json:"Steel,omitempty"`
	Crystal          *int32 `protobuf:"varint,5,req,name=Crystal" json:"Crystal,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Resources) Reset()                    { *m = Resources{} }
func (m *Resources) String() string            { return proto.CompactTextString(m) }
func (*Resources) ProtoMessage()               {}
func (*Resources) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *Resources) GetFood() int32 {
	if m != nil && m.Food != nil {
		return *m.Food
	}
	return 0
}

func (m *Resources) GetLumber() int32 {
	if m != nil && m.Lumber != nil {
		return *m.Lumber
	}
	return 0
}

func (m *Resources) GetMarble() int32 {
	if m != nil && m.Marble != nil {
		return *m.Marble
	}
	return 0
}

func (m *Resources) GetSteel() int32 {
	if m != nil && m.Steel != nil {
		return *m.Steel
	}
	return 0
}

func (m *Resources) GetCrystal() int32 {
	if m != nil && m.Crystal != nil {
		return *m.Crystal
	}
	return 0
}

type ResourcesCollected struct {
	Food             *bool  `protobuf:"varint,1,req,name=Food" json:"Food,omitempty"`
	Lumber           *bool  `protobuf:"varint,2,req,name=Lumber" json:"Lumber,omitempty"`
	Marble           *bool  `protobuf:"varint,3,req,name=Marble" json:"Marble,omitempty"`
	Steel            *bool  `protobuf:"varint,4,req,name=Steel" json:"Steel,omitempty"`
	Crystal          *bool  `protobuf:"varint,5,req,name=Crystal" json:"Crystal,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ResourcesCollected) Reset()                    { *m = ResourcesCollected{} }
func (m *ResourcesCollected) String() string            { return proto.CompactTextString(m) }
func (*ResourcesCollected) ProtoMessage()               {}
func (*ResourcesCollected) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *ResourcesCollected) GetFood() bool {
	if m != nil && m.Food != nil {
		return *m.Food
	}
	return false
}

func (m *ResourcesCollected) GetLumber() bool {
	if m != nil && m.Lumber != nil {
		return *m.Lumber
	}
	return false
}

func (m *ResourcesCollected) GetMarble() bool {
	if m != nil && m.Marble != nil {
		return *m.Marble
	}
	return false
}

func (m *ResourcesCollected) GetSteel() bool {
	if m != nil && m.Steel != nil {
		return *m.Steel
	}
	return false
}

func (m *ResourcesCollected) GetCrystal() bool {
	if m != nil && m.Crystal != nil {
		return *m.Crystal
	}
	return false
}

type FallenTarget struct {
	Coord            *Coord `protobuf:"bytes,1,req,name=Coord" json:"Coord,omitempty"`
	MapSN            *int32 `protobuf:"varint,2,req,name=MapSN" json:"MapSN,omitempty"`
	ZoneSN           *int32 `protobuf:"varint,3,req,name=ZoneSN" json:"ZoneSN,omitempty"`
	SN               *int32 `protobuf:"varint,4,req,name=SN" json:"SN,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FallenTarget) Reset()                    { *m = FallenTarget{} }
func (m *FallenTarget) String() string            { return proto.CompactTextString(m) }
func (*FallenTarget) ProtoMessage()               {}
func (*FallenTarget) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

func (m *FallenTarget) GetCoord() *Coord {
	if m != nil {
		return m.Coord
	}
	return nil
}

func (m *FallenTarget) GetMapSN() int32 {
	if m != nil && m.MapSN != nil {
		return *m.MapSN
	}
	return 0
}

func (m *FallenTarget) GetZoneSN() int32 {
	if m != nil && m.ZoneSN != nil {
		return *m.ZoneSN
	}
	return 0
}

func (m *FallenTarget) GetSN() int32 {
	if m != nil && m.SN != nil {
		return *m.SN
	}
	return 0
}

type Skill struct {
	Name             *string  `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Args             []string `protobuf:"bytes,2,rep,name=Args" json:"Args,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Skill) Reset()                    { *m = Skill{} }
func (m *Skill) String() string            { return proto.CompactTextString(m) }
func (*Skill) ProtoMessage()               {}
func (*Skill) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

func (m *Skill) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Skill) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type NpcHero struct {
	Name             *string  `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Level            *int32   `protobuf:"varint,2,req,name=Level" json:"Level,omitempty"`
	ArmyAmount       *int32   `protobuf:"varint,3,req,name=ArmyAmount" json:"ArmyAmount,omitempty"`
	ArmyAmountBonus  *float32 `protobuf:"fixed32,4,req,name=ArmyAmountBonus" json:"ArmyAmountBonus,omitempty"`
	Skills           []*Skill `protobuf:"bytes,10,rep,name=Skills" json:"Skills,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *NpcHero) Reset()                    { *m = NpcHero{} }
func (m *NpcHero) String() string            { return proto.CompactTextString(m) }
func (*NpcHero) ProtoMessage()               {}
func (*NpcHero) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{4} }

func (m *NpcHero) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NpcHero) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *NpcHero) GetArmyAmount() int32 {
	if m != nil && m.ArmyAmount != nil {
		return *m.ArmyAmount
	}
	return 0
}

func (m *NpcHero) GetArmyAmountBonus() float32 {
	if m != nil && m.ArmyAmountBonus != nil {
		return *m.ArmyAmountBonus
	}
	return 0
}

func (m *NpcHero) GetSkills() []*Skill {
	if m != nil {
		return m.Skills
	}
	return nil
}

type Hero struct {
	Id               *string  `protobuf:"bytes,1,req,name=Id" json:"Id,omitempty"`
	Name             *string  `protobuf:"bytes,2,req,name=Name" json:"Name,omitempty"`
	Level            *int32   `protobuf:"varint,3,req,name=Level" json:"Level,omitempty"`
	ArmyAmount       *int32   `protobuf:"varint,4,req,name=ArmyAmount" json:"ArmyAmount,omitempty"`
	Energy           *int32   `protobuf:"varint,5,req,name=Energy" json:"Energy,omitempty"`
	EnergyUpdatedAt  *int64   `protobuf:"varint,6,req,name=EnergyUpdatedAt" json:"EnergyUpdatedAt,omitempty"`
	FragmentCount    *int32   `protobuf:"varint,7,req,name=FragmentCount" json:"FragmentCount,omitempty"`
	IsNew            *bool    `protobuf:"varint,10,req,name=IsNew" json:"IsNew,omitempty"`
	OnTroop          *bool    `protobuf:"varint,11,req,name=OnTroop" json:"OnTroop,omitempty"`
	IsRecruiting     *bool    `protobuf:"varint,12,req,name=IsRecruiting" json:"IsRecruiting,omitempty"`
	Skills           []*Skill `protobuf:"bytes,20,rep,name=Skills" json:"Skills,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Hero) Reset()                    { *m = Hero{} }
func (m *Hero) String() string            { return proto.CompactTextString(m) }
func (*Hero) ProtoMessage()               {}
func (*Hero) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{5} }

func (m *Hero) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Hero) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Hero) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *Hero) GetArmyAmount() int32 {
	if m != nil && m.ArmyAmount != nil {
		return *m.ArmyAmount
	}
	return 0
}

func (m *Hero) GetEnergy() int32 {
	if m != nil && m.Energy != nil {
		return *m.Energy
	}
	return 0
}

func (m *Hero) GetEnergyUpdatedAt() int64 {
	if m != nil && m.EnergyUpdatedAt != nil {
		return *m.EnergyUpdatedAt
	}
	return 0
}

func (m *Hero) GetFragmentCount() int32 {
	if m != nil && m.FragmentCount != nil {
		return *m.FragmentCount
	}
	return 0
}

func (m *Hero) GetIsNew() bool {
	if m != nil && m.IsNew != nil {
		return *m.IsNew
	}
	return false
}

func (m *Hero) GetOnTroop() bool {
	if m != nil && m.OnTroop != nil {
		return *m.OnTroop
	}
	return false
}

func (m *Hero) GetIsRecruiting() bool {
	if m != nil && m.IsRecruiting != nil {
		return *m.IsRecruiting
	}
	return false
}

func (m *Hero) GetSkills() []*Skill {
	if m != nil {
		return m.Skills
	}
	return nil
}

type Currency struct {
	Gold             *int32 `protobuf:"varint,1,req,name=Gold" json:"Gold,omitempty"`
	Gem              *int32 `protobuf:"varint,2,req,name=Gem" json:"Gem,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Currency) Reset()                    { *m = Currency{} }
func (m *Currency) String() string            { return proto.CompactTextString(m) }
func (*Currency) ProtoMessage()               {}
func (*Currency) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{6} }

func (m *Currency) GetGold() int32 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *Currency) GetGem() int32 {
	if m != nil && m.Gem != nil {
		return *m.Gem
	}
	return 0
}

type CurrencyCollected struct {
	Gold             *bool  `protobuf:"varint,1,req,name=Gold" json:"Gold,omitempty"`
	Gem              *bool  `protobuf:"varint,2,req,name=Gem" json:"Gem,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CurrencyCollected) Reset()                    { *m = CurrencyCollected{} }
func (m *CurrencyCollected) String() string            { return proto.CompactTextString(m) }
func (*CurrencyCollected) ProtoMessage()               {}
func (*CurrencyCollected) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{7} }

func (m *CurrencyCollected) GetGold() bool {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return false
}

func (m *CurrencyCollected) GetGem() bool {
	if m != nil && m.Gem != nil {
		return *m.Gem
	}
	return false
}

type BattleReport struct {
	Id               *string        `protobuf:"bytes,1,req,name=Id" json:"Id,omitempty"`
	IsRead           *bool          `protobuf:"varint,2,req,name=IsRead" json:"IsRead,omitempty"`
	Timestamp        *int64         `protobuf:"varint,3,req,name=Timestamp" json:"Timestamp,omitempty"`
	Currency         *Currency      `protobuf:"bytes,4,req,name=Currency" json:"Currency,omitempty"`
	Resources        *Resources     `protobuf:"bytes,5,req,name=Resources" json:"Resources,omitempty"`
	Report           *Battle_Report `protobuf:"bytes,6,opt,name=Report" json:"Report,omitempty"`
	ChestName        *string        `protobuf:"bytes,7,req,name=ChestName" json:"ChestName,omitempty"`
	HasAlliance      *bool          `protobuf:"varint,8,req,name=HasAlliance" json:"HasAlliance,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *BattleReport) Reset()                    { *m = BattleReport{} }
func (m *BattleReport) String() string            { return proto.CompactTextString(m) }
func (*BattleReport) ProtoMessage()               {}
func (*BattleReport) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{8} }

func (m *BattleReport) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BattleReport) GetIsRead() bool {
	if m != nil && m.IsRead != nil {
		return *m.IsRead
	}
	return false
}

func (m *BattleReport) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *BattleReport) GetCurrency() *Currency {
	if m != nil {
		return m.Currency
	}
	return nil
}

func (m *BattleReport) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *BattleReport) GetReport() *Battle_Report {
	if m != nil {
		return m.Report
	}
	return nil
}

func (m *BattleReport) GetChestName() string {
	if m != nil && m.ChestName != nil {
		return *m.ChestName
	}
	return ""
}

func (m *BattleReport) GetHasAlliance() bool {
	if m != nil && m.HasAlliance != nil {
		return *m.HasAlliance
	}
	return false
}

type PersonalMessage struct {
	PlayerId         *string                    `protobuf:"bytes,6,req,name=PlayerId" json:"PlayerId,omitempty"`
	PlayerName       *string                    `protobuf:"bytes,1,req,name=PlayerName" json:"PlayerName,omitempty"`
	AllianceName     *string                    `protobuf:"bytes,2,req,name=AllianceName" json:"AllianceName,omitempty"`
	Timestamp        *int64                     `protobuf:"varint,3,req,name=Timestamp" json:"Timestamp,omitempty"`
	IsRead           *bool                      `protobuf:"varint,4,req,name=IsRead" json:"IsRead,omitempty"`
	Messages         []*PersonalMessage_Message `protobuf:"bytes,5,rep,name=Messages" json:"Messages,omitempty"`
	MapSN            *int32                     `protobuf:"varint,7,req,name=MapSN" json:"MapSN,omitempty"`
	Avatar           *int32                     `protobuf:"varint,8,req,name=Avatar" json:"Avatar,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *PersonalMessage) Reset()                    { *m = PersonalMessage{} }
func (m *PersonalMessage) String() string            { return proto.CompactTextString(m) }
func (*PersonalMessage) ProtoMessage()               {}
func (*PersonalMessage) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{9} }

func (m *PersonalMessage) GetPlayerId() string {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return ""
}

func (m *PersonalMessage) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *PersonalMessage) GetAllianceName() string {
	if m != nil && m.AllianceName != nil {
		return *m.AllianceName
	}
	return ""
}

func (m *PersonalMessage) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *PersonalMessage) GetIsRead() bool {
	if m != nil && m.IsRead != nil {
		return *m.IsRead
	}
	return false
}

func (m *PersonalMessage) GetMessages() []*PersonalMessage_Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *PersonalMessage) GetMapSN() int32 {
	if m != nil && m.MapSN != nil {
		return *m.MapSN
	}
	return 0
}

func (m *PersonalMessage) GetAvatar() int32 {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return 0
}

type PersonalMessage_Message struct {
	Content          *string `protobuf:"bytes,1,req,name=Content" json:"Content,omitempty"`
	IsSend           *bool   `protobuf:"varint,2,req,name=IsSend" json:"IsSend,omitempty"`
	Timestamp        *int64  `protobuf:"varint,3,req,name=Timestamp" json:"Timestamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PersonalMessage_Message) Reset()                    { *m = PersonalMessage_Message{} }
func (m *PersonalMessage_Message) String() string            { return proto.CompactTextString(m) }
func (*PersonalMessage_Message) ProtoMessage()               {}
func (*PersonalMessage_Message) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{9, 0} }

func (m *PersonalMessage_Message) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *PersonalMessage_Message) GetIsSend() bool {
	if m != nil && m.IsSend != nil {
		return *m.IsSend
	}
	return false
}

func (m *PersonalMessage_Message) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type HeroFragment struct {
	Name             *string `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Count            *int32  `protobuf:"varint,2,req,name=Count" json:"Count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HeroFragment) Reset()                    { *m = HeroFragment{} }
func (m *HeroFragment) String() string            { return proto.CompactTextString(m) }
func (*HeroFragment) ProtoMessage()               {}
func (*HeroFragment) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{10} }

func (m *HeroFragment) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *HeroFragment) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type CommonReward struct {
	Currency         *Currency       `protobuf:"bytes,1,req,name=Currency" json:"Currency,omitempty"`
	Resources        *Resources      `protobuf:"bytes,2,req,name=Resources" json:"Resources,omitempty"`
	Fragments        []*HeroFragment `protobuf:"bytes,3,rep,name=Fragments" json:"Fragments,omitempty"`
	Chests           []*Chest        `protobuf:"bytes,4,rep,name=Chests" json:"Chests,omitempty"`
	PointLimit       *int32          `protobuf:"varint,5,req,name=PointLimit" json:"PointLimit,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CommonReward) Reset()                    { *m = CommonReward{} }
func (m *CommonReward) String() string            { return proto.CompactTextString(m) }
func (*CommonReward) ProtoMessage()               {}
func (*CommonReward) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{11} }

func (m *CommonReward) GetCurrency() *Currency {
	if m != nil {
		return m.Currency
	}
	return nil
}

func (m *CommonReward) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *CommonReward) GetFragments() []*HeroFragment {
	if m != nil {
		return m.Fragments
	}
	return nil
}

func (m *CommonReward) GetChests() []*Chest {
	if m != nil {
		return m.Chests
	}
	return nil
}

func (m *CommonReward) GetPointLimit() int32 {
	if m != nil && m.PointLimit != nil {
		return *m.PointLimit
	}
	return 0
}

type SystemMessage struct {
	Id               *string       `protobuf:"bytes,1,req,name=Id" json:"Id,omitempty"`
	To               *string       `protobuf:"bytes,2,req,name=To" json:"To,omitempty"`
	Timestamp        *int64        `protobuf:"varint,3,req,name=Timestamp" json:"Timestamp,omitempty"`
	IsRead           *bool         `protobuf:"varint,4,req,name=IsRead" json:"IsRead,omitempty"`
	IsCollect        *bool         `protobuf:"varint,5,req,name=IsCollect" json:"IsCollect,omitempty"`
	IsTemplate       *bool         `protobuf:"varint,6,req,name=IsTemplate" json:"IsTemplate,omitempty"`
	Subject          *string       `protobuf:"bytes,7,req,name=Subject" json:"Subject,omitempty"`
	Body             *string       `protobuf:"bytes,8,req,name=Body" json:"Body,omitempty"`
	Params           []string      `protobuf:"bytes,10,rep,name=Params" json:"Params,omitempty"`
	Attachment       *CommonReward `protobuf:"bytes,11,opt,name=Attachment" json:"Attachment,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *SystemMessage) Reset()                    { *m = SystemMessage{} }
func (m *SystemMessage) String() string            { return proto.CompactTextString(m) }
func (*SystemMessage) ProtoMessage()               {}
func (*SystemMessage) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{12} }

func (m *SystemMessage) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *SystemMessage) GetTo() string {
	if m != nil && m.To != nil {
		return *m.To
	}
	return ""
}

func (m *SystemMessage) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *SystemMessage) GetIsRead() bool {
	if m != nil && m.IsRead != nil {
		return *m.IsRead
	}
	return false
}

func (m *SystemMessage) GetIsCollect() bool {
	if m != nil && m.IsCollect != nil {
		return *m.IsCollect
	}
	return false
}

func (m *SystemMessage) GetIsTemplate() bool {
	if m != nil && m.IsTemplate != nil {
		return *m.IsTemplate
	}
	return false
}

func (m *SystemMessage) GetSubject() string {
	if m != nil && m.Subject != nil {
		return *m.Subject
	}
	return ""
}

func (m *SystemMessage) GetBody() string {
	if m != nil && m.Body != nil {
		return *m.Body
	}
	return ""
}

func (m *SystemMessage) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *SystemMessage) GetAttachment() *CommonReward {
	if m != nil {
		return m.Attachment
	}
	return nil
}

type FieldFirstDown struct {
	Records          []*FieldFirstDown_Record `protobuf:"bytes,1,rep,name=Records" json:"Records,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *FieldFirstDown) Reset()                    { *m = FieldFirstDown{} }
func (m *FieldFirstDown) String() string            { return proto.CompactTextString(m) }
func (*FieldFirstDown) ProtoMessage()               {}
func (*FieldFirstDown) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{13} }

func (m *FieldFirstDown) GetRecords() []*FieldFirstDown_Record {
	if m != nil {
		return m.Records
	}
	return nil
}

type FieldFirstDown_Record struct {
	Level            *int32 `protobuf:"varint,1,req,name=Level" json:"Level,omitempty"`
	IsCollect        *bool  `protobuf:"varint,2,req,name=IsCollect" json:"IsCollect,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FieldFirstDown_Record) Reset()                    { *m = FieldFirstDown_Record{} }
func (m *FieldFirstDown_Record) String() string            { return proto.CompactTextString(m) }
func (*FieldFirstDown_Record) ProtoMessage()               {}
func (*FieldFirstDown_Record) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{13, 0} }

func (m *FieldFirstDown_Record) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *FieldFirstDown_Record) GetIsCollect() bool {
	if m != nil && m.IsCollect != nil {
		return *m.IsCollect
	}
	return false
}

type Tribute struct {
	Timestamp        *int64 `protobuf:"varint,1,req,name=Timestamp" json:"Timestamp,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Tribute) Reset()                    { *m = Tribute{} }
func (m *Tribute) String() string            { return proto.CompactTextString(m) }
func (*Tribute) ProtoMessage()               {}
func (*Tribute) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{14} }

func (m *Tribute) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type Task struct {
	Id               *int32 `protobuf:"varint,1,req,name=Id" json:"Id,omitempty"`
	Value            *int32 `protobuf:"varint,2,req,name=Value" json:"Value,omitempty"`
	IsDone           *bool  `protobuf:"varint,3,req,name=IsDone" json:"IsDone,omitempty"`
	IsCollect        *bool  `protobuf:"varint,4,req,name=IsCollect" json:"IsCollect,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{15} }

func (m *Task) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Task) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *Task) GetIsDone() bool {
	if m != nil && m.IsDone != nil {
		return *m.IsDone
	}
	return false
}

func (m *Task) GetIsCollect() bool {
	if m != nil && m.IsCollect != nil {
		return *m.IsCollect
	}
	return false
}

type Daily struct {
	Id               *string `protobuf:"bytes,1,req,name=Id" json:"Id,omitempty"`
	Vitality         *int32  `protobuf:"varint,2,req,name=Vitality" json:"Vitality,omitempty"`
	TaskLevel        *int32  `protobuf:"varint,3,req,name=TaskLevel" json:"TaskLevel,omitempty"`
	CanGetReward     []int32 `protobuf:"varint,4,rep,name=CanGetReward" json:"CanGetReward,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Daily) Reset()                    { *m = Daily{} }
func (m *Daily) String() string            { return proto.CompactTextString(m) }
func (*Daily) ProtoMessage()               {}
func (*Daily) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{16} }

func (m *Daily) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Daily) GetVitality() int32 {
	if m != nil && m.Vitality != nil {
		return *m.Vitality
	}
	return 0
}

func (m *Daily) GetTaskLevel() int32 {
	if m != nil && m.TaskLevel != nil {
		return *m.TaskLevel
	}
	return 0
}

func (m *Daily) GetCanGetReward() []int32 {
	if m != nil {
		return m.CanGetReward
	}
	return nil
}

type ChapterTask struct {
	Id               *int32 `protobuf:"varint,1,req,name=Id" json:"Id,omitempty"`
	Value            *int32 `protobuf:"varint,2,req,name=Value" json:"Value,omitempty"`
	IsDone           *bool  `protobuf:"varint,3,req,name=IsDone" json:"IsDone,omitempty"`
	IsCollect        *bool  `protobuf:"varint,4,req,name=IsCollect" json:"IsCollect,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ChapterTask) Reset()                    { *m = ChapterTask{} }
func (m *ChapterTask) String() string            { return proto.CompactTextString(m) }
func (*ChapterTask) ProtoMessage()               {}
func (*ChapterTask) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{17} }

func (m *ChapterTask) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ChapterTask) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *ChapterTask) GetIsDone() bool {
	if m != nil && m.IsDone != nil {
		return *m.IsDone
	}
	return false
}

func (m *ChapterTask) GetIsCollect() bool {
	if m != nil && m.IsCollect != nil {
		return *m.IsCollect
	}
	return false
}

type Chest struct {
	Name             *string `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Count            *int32  `protobuf:"varint,2,req,name=Count" json:"Count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Chest) Reset()                    { *m = Chest{} }
func (m *Chest) String() string            { return proto.CompactTextString(m) }
func (*Chest) ProtoMessage()               {}
func (*Chest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{18} }

func (m *Chest) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Chest) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type DailyGift struct {
	ProductId        *string `protobuf:"bytes,1,req,name=ProductId" json:"ProductId,omitempty"`
	IsBuy            *bool   `protobuf:"varint,2,req,name=isBuy" json:"isBuy,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DailyGift) Reset()                    { *m = DailyGift{} }
func (m *DailyGift) String() string            { return proto.CompactTextString(m) }
func (*DailyGift) ProtoMessage()               {}
func (*DailyGift) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{19} }

func (m *DailyGift) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *DailyGift) GetIsBuy() bool {
	if m != nil && m.IsBuy != nil {
		return *m.IsBuy
	}
	return false
}

type TreasureMap struct {
	Amount           *int32 `protobuf:"varint,1,req,name=Amount" json:"Amount,omitempty"`
	CDExpireAt       *int64 `protobuf:"varint,2,req,name=CDExpireAt" json:"CDExpireAt,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TreasureMap) Reset()                    { *m = TreasureMap{} }
func (m *TreasureMap) String() string            { return proto.CompactTextString(m) }
func (*TreasureMap) ProtoMessage()               {}
func (*TreasureMap) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{20} }

func (m *TreasureMap) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *TreasureMap) GetCDExpireAt() int64 {
	if m != nil && m.CDExpireAt != nil {
		return *m.CDExpireAt
	}
	return 0
}

type Mark struct {
	Coord            *Coord  `protobuf:"bytes,1,req,name=Coord" json:"Coord,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=Name" json:"Name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Mark) Reset()                    { *m = Mark{} }
func (m *Mark) String() string            { return proto.CompactTextString(m) }
func (*Mark) ProtoMessage()               {}
func (*Mark) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{21} }

func (m *Mark) GetCoord() *Coord {
	if m != nil {
		return m.Coord
	}
	return nil
}

func (m *Mark) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type PlayerMarks struct {
	Marks            []*Mark `protobuf:"bytes,1,rep,name=Marks" json:"Marks,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerMarks) Reset()                    { *m = PlayerMarks{} }
func (m *PlayerMarks) String() string            { return proto.CompactTextString(m) }
func (*PlayerMarks) ProtoMessage()               {}
func (*PlayerMarks) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{22} }

func (m *PlayerMarks) GetMarks() []*Mark {
	if m != nil {
		return m.Marks
	}
	return nil
}

type JoinCondition struct {
	Type             *int32 `protobuf:"varint,1,req,name=Type" json:"Type,omitempty"`
	ForceLimit       *int32 `protobuf:"varint,2,req,name=ForceLimit" json:"ForceLimit,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *JoinCondition) Reset()                    { *m = JoinCondition{} }
func (m *JoinCondition) String() string            { return proto.CompactTextString(m) }
func (*JoinCondition) ProtoMessage()               {}
func (*JoinCondition) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{23} }

func (m *JoinCondition) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *JoinCondition) GetForceLimit() int32 {
	if m != nil && m.ForceLimit != nil {
		return *m.ForceLimit
	}
	return 0
}

type AllianceJoinRequest struct {
	PlayerId         *string `protobuf:"bytes,1,req,name=PlayerId" json:"PlayerId,omitempty"`
	PlayerName       *string `protobuf:"bytes,2,req,name=PlayerName" json:"PlayerName,omitempty"`
	Message          *string `protobuf:"bytes,3,req,name=Message" json:"Message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AllianceJoinRequest) Reset()                    { *m = AllianceJoinRequest{} }
func (m *AllianceJoinRequest) String() string            { return proto.CompactTextString(m) }
func (*AllianceJoinRequest) ProtoMessage()               {}
func (*AllianceJoinRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{24} }

func (m *AllianceJoinRequest) GetPlayerId() string {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return ""
}

func (m *AllianceJoinRequest) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *AllianceJoinRequest) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type DailyLimit struct {
	ChestLimit       *int32     `protobuf:"varint,1,req,name=ChestLimit" json:"ChestLimit,omitempty"`
	ChestCurrent     *int32     `protobuf:"varint,2,req,name=ChestCurrent" json:"ChestCurrent,omitempty"`
	ResourceLimit    *Resources `protobuf:"bytes,3,req,name=ResourceLimit" json:"ResourceLimit,omitempty"`
	ResourceCurrent  *Resources `protobuf:"bytes,4,req,name=ResourceCurrent" json:"ResourceCurrent,omitempty"`
	GoldLimit        *int32     `protobuf:"varint,5,req,name=GoldLimit" json:"GoldLimit,omitempty"`
	GoldCurrent      *int32     `protobuf:"varint,6,req,name=GoldCurrent" json:"GoldCurrent,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *DailyLimit) Reset()                    { *m = DailyLimit{} }
func (m *DailyLimit) String() string            { return proto.CompactTextString(m) }
func (*DailyLimit) ProtoMessage()               {}
func (*DailyLimit) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{25} }

func (m *DailyLimit) GetChestLimit() int32 {
	if m != nil && m.ChestLimit != nil {
		return *m.ChestLimit
	}
	return 0
}

func (m *DailyLimit) GetChestCurrent() int32 {
	if m != nil && m.ChestCurrent != nil {
		return *m.ChestCurrent
	}
	return 0
}

func (m *DailyLimit) GetResourceLimit() *Resources {
	if m != nil {
		return m.ResourceLimit
	}
	return nil
}

func (m *DailyLimit) GetResourceCurrent() *Resources {
	if m != nil {
		return m.ResourceCurrent
	}
	return nil
}

func (m *DailyLimit) GetGoldLimit() int32 {
	if m != nil && m.GoldLimit != nil {
		return *m.GoldLimit
	}
	return 0
}

func (m *DailyLimit) GetGoldCurrent() int32 {
	if m != nil && m.GoldCurrent != nil {
		return *m.GoldCurrent
	}
	return 0
}

type ForceRewards struct {
	Levels           []int32 `protobuf:"varint,1,rep,name=Levels" json:"Levels,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ForceRewards) Reset()                    { *m = ForceRewards{} }
func (m *ForceRewards) String() string            { return proto.CompactTextString(m) }
func (*ForceRewards) ProtoMessage()               {}
func (*ForceRewards) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{26} }

func (m *ForceRewards) GetLevels() []int32 {
	if m != nil {
		return m.Levels
	}
	return nil
}

type MonthCard struct {
	MonthCardId      *string `protobuf:"bytes,1,req,name=MonthCardId" json:"MonthCardId,omitempty"`
	ExpiredTime      *int64  `protobuf:"varint,2,req,name=ExpiredTime" json:"ExpiredTime,omitempty"`
	IsReward         *bool   `protobuf:"varint,3,req,name=IsReward" json:"IsReward,omitempty"`
	DailyExpiredAt   *int64  `protobuf:"varint,4,req,name=DailyExpiredAt" json:"DailyExpiredAt,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MonthCard) Reset()                    { *m = MonthCard{} }
func (m *MonthCard) String() string            { return proto.CompactTextString(m) }
func (*MonthCard) ProtoMessage()               {}
func (*MonthCard) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{27} }

func (m *MonthCard) GetMonthCardId() string {
	if m != nil && m.MonthCardId != nil {
		return *m.MonthCardId
	}
	return ""
}

func (m *MonthCard) GetExpiredTime() int64 {
	if m != nil && m.ExpiredTime != nil {
		return *m.ExpiredTime
	}
	return 0
}

func (m *MonthCard) GetIsReward() bool {
	if m != nil && m.IsReward != nil {
		return *m.IsReward
	}
	return false
}

func (m *MonthCard) GetDailyExpiredAt() int64 {
	if m != nil && m.DailyExpiredAt != nil {
		return *m.DailyExpiredAt
	}
	return 0
}

type HeroItem struct {
	Fence            *int32  `protobuf:"varint,1,req,name=Fence" json:"Fence,omitempty"`
	HeroName         *string `protobuf:"bytes,2,req,name=HeroName" json:"HeroName,omitempty"`
	FragmentCount    *int32  `protobuf:"varint,3,req,name=FragmentCount" json:"FragmentCount,omitempty"`
	GoldPrice        *int32  `protobuf:"varint,4,req,name=GoldPrice" json:"GoldPrice,omitempty"`
	IsCollect        *bool   `protobuf:"varint,5,req,name=IsCollect" json:"IsCollect,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HeroItem) Reset()                    { *m = HeroItem{} }
func (m *HeroItem) String() string            { return proto.CompactTextString(m) }
func (*HeroItem) ProtoMessage()               {}
func (*HeroItem) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{28} }

func (m *HeroItem) GetFence() int32 {
	if m != nil && m.Fence != nil {
		return *m.Fence
	}
	return 0
}

func (m *HeroItem) GetHeroName() string {
	if m != nil && m.HeroName != nil {
		return *m.HeroName
	}
	return ""
}

func (m *HeroItem) GetFragmentCount() int32 {
	if m != nil && m.FragmentCount != nil {
		return *m.FragmentCount
	}
	return 0
}

func (m *HeroItem) GetGoldPrice() int32 {
	if m != nil && m.GoldPrice != nil {
		return *m.GoldPrice
	}
	return 0
}

func (m *HeroItem) GetIsCollect() bool {
	if m != nil && m.IsCollect != nil {
		return *m.IsCollect
	}
	return false
}

type DailyShop struct {
	Id                *string     `protobuf:"bytes,1,req,name=Id" json:"Id,omitempty"`
	RequestId         *string     `protobuf:"bytes,2,req,name=RequestId" json:"RequestId,omitempty"`
	Enable            *bool       `protobuf:"varint,3,req,name=Enable" json:"Enable,omitempty"`
	FreeGold          *int32      `protobuf:"varint,5,req,name=FreeGold" json:"FreeGold,omitempty"`
	FreeGoldCollected *bool       `protobuf:"varint,6,req,name=FreeGoldCollected" json:"FreeGoldCollected,omitempty"`
	FreeGem           *int32      `protobuf:"varint,7,req,name=FreeGem" json:"FreeGem,omitempty"`
	FreeGemCollected  *bool       `protobuf:"varint,8,req,name=FreeGemCollected" json:"FreeGemCollected,omitempty"`
	HeroItem          []*HeroItem `protobuf:"bytes,9,rep,name=HeroItem" json:"HeroItem,omitempty"`
	ExpiredAt         *int64      `protobuf:"varint,10,req,name=ExpiredAt" json:"ExpiredAt,omitempty"`
	XXX_unrecognized  []byte      `json:"-"`
}

func (m *DailyShop) Reset()                    { *m = DailyShop{} }
func (m *DailyShop) String() string            { return proto.CompactTextString(m) }
func (*DailyShop) ProtoMessage()               {}
func (*DailyShop) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{29} }

func (m *DailyShop) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *DailyShop) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *DailyShop) GetEnable() bool {
	if m != nil && m.Enable != nil {
		return *m.Enable
	}
	return false
}

func (m *DailyShop) GetFreeGold() int32 {
	if m != nil && m.FreeGold != nil {
		return *m.FreeGold
	}
	return 0
}

func (m *DailyShop) GetFreeGoldCollected() bool {
	if m != nil && m.FreeGoldCollected != nil {
		return *m.FreeGoldCollected
	}
	return false
}

func (m *DailyShop) GetFreeGem() int32 {
	if m != nil && m.FreeGem != nil {
		return *m.FreeGem
	}
	return 0
}

func (m *DailyShop) GetFreeGemCollected() bool {
	if m != nil && m.FreeGemCollected != nil {
		return *m.FreeGemCollected
	}
	return false
}

func (m *DailyShop) GetHeroItem() []*HeroItem {
	if m != nil {
		return m.HeroItem
	}
	return nil
}

func (m *DailyShop) GetExpiredAt() int64 {
	if m != nil && m.ExpiredAt != nil {
		return *m.ExpiredAt
	}
	return 0
}

func init() {
	proto.RegisterType((*Resources)(nil), "protocol.Resources")
	proto.RegisterType((*ResourcesCollected)(nil), "protocol.ResourcesCollected")
	proto.RegisterType((*FallenTarget)(nil), "protocol.FallenTarget")
	proto.RegisterType((*Skill)(nil), "protocol.Skill")
	proto.RegisterType((*NpcHero)(nil), "protocol.NpcHero")
	proto.RegisterType((*Hero)(nil), "protocol.Hero")
	proto.RegisterType((*Currency)(nil), "protocol.Currency")
	proto.RegisterType((*CurrencyCollected)(nil), "protocol.CurrencyCollected")
	proto.RegisterType((*BattleReport)(nil), "protocol.BattleReport")
	proto.RegisterType((*PersonalMessage)(nil), "protocol.PersonalMessage")
	proto.RegisterType((*PersonalMessage_Message)(nil), "protocol.PersonalMessage.Message")
	proto.RegisterType((*HeroFragment)(nil), "protocol.HeroFragment")
	proto.RegisterType((*CommonReward)(nil), "protocol.CommonReward")
	proto.RegisterType((*SystemMessage)(nil), "protocol.SystemMessage")
	proto.RegisterType((*FieldFirstDown)(nil), "protocol.FieldFirstDown")
	proto.RegisterType((*FieldFirstDown_Record)(nil), "protocol.FieldFirstDown.Record")
	proto.RegisterType((*Tribute)(nil), "protocol.Tribute")
	proto.RegisterType((*Task)(nil), "protocol.Task")
	proto.RegisterType((*Daily)(nil), "protocol.Daily")
	proto.RegisterType((*ChapterTask)(nil), "protocol.ChapterTask")
	proto.RegisterType((*Chest)(nil), "protocol.Chest")
	proto.RegisterType((*DailyGift)(nil), "protocol.DailyGift")
	proto.RegisterType((*TreasureMap)(nil), "protocol.TreasureMap")
	proto.RegisterType((*Mark)(nil), "protocol.Mark")
	proto.RegisterType((*PlayerMarks)(nil), "protocol.PlayerMarks")
	proto.RegisterType((*JoinCondition)(nil), "protocol.JoinCondition")
	proto.RegisterType((*AllianceJoinRequest)(nil), "protocol.AllianceJoinRequest")
	proto.RegisterType((*DailyLimit)(nil), "protocol.DailyLimit")
	proto.RegisterType((*ForceRewards)(nil), "protocol.ForceRewards")
	proto.RegisterType((*MonthCard)(nil), "protocol.MonthCard")
	proto.RegisterType((*HeroItem)(nil), "protocol.HeroItem")
	proto.RegisterType((*DailyShop)(nil), "protocol.DailyShop")
}

func init() { proto.RegisterFile("models.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 1572 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xcb, 0x6e, 0x1b, 0x47,
	0x16, 0x05, 0x9b, 0xef, 0x4b, 0x4a, 0xb2, 0xdb, 0x82, 0xa6, 0x21, 0x08, 0x1e, 0x4d, 0xc3, 0x63,
	0x0b, 0x83, 0x81, 0x3c, 0xd6, 0x0c, 0x06, 0x63, 0x60, 0x8c, 0x80, 0xa2, 0x4c, 0x99, 0x81, 0xa5,
	0x08, 0x45, 0xc6, 0x40, 0xb2, 0x09, 0x4a, 0xec, 0x8a, 0xd4, 0x51, 0x77, 0x17, 0x53, 0x5d, 0xb4,
	0xc3, 0x55, 0xb6, 0x49, 0xb6, 0xd9, 0x07, 0xc8, 0x26, 0xc8, 0x2e, 0x5f, 0x91, 0xef, 0x49, 0x3e,
	0x21, 0xb8, 0xb7, 0xaa, 0x1f, 0x24, 0x25, 0xc5, 0x0e, 0x90, 0x15, 0xeb, 0x9c, 0x7a, 0xf4, 0xa9,
	0xfb, 0x2c, 0x42, 0x37, 0x96, 0x81, 0x88, 0xd2, 0xfd, 0xa9, 0x92, 0x5a, 0xba, 0x2d, 0xfa, 0x99,
	0xc8, 0x68, 0xfb, 0xde, 0x39, 0xd7, 0x3a, 0x12, 0x9f, 0x28, 0x31, 0x95, 0x4a, 0x9b, 0xe9, 0xed,
	0x8e, 0x9e, 0x4f, 0x85, 0x5d, 0xeb, 0x7f, 0x09, 0x6d, 0x26, 0x52, 0x39, 0x53, 0x13, 0x91, 0xba,
	0x2e, 0xd4, 0x06, 0x52, 0x06, 0x5e, 0x65, 0xd7, 0xd9, 0xab, 0x33, 0x1a, 0xbb, 0x5b, 0xd0, 0x78,
	0x39, 0x8b, 0xcf, 0x85, 0xf2, 0x1c, 0x62, 0x2d, 0x42, 0xfe, 0x84, 0xab, 0xf3, 0x48, 0x78, 0x55,
	0xc3, 0x1b, 0xe4, 0x6e, 0x42, 0x7d, 0xa4, 0x85, 0x88, 0xbc, 0x1a, 0xd1, 0x06, 0xb8, 0x1e, 0x34,
	0xfb, 0x6a, 0x9e, 0x6a, 0x1e, 0x79, 0x75, 0xe2, 0x33, 0xe8, 0x7f, 0x55, 0x01, 0x37, 0x57, 0xd0,
	0x97, 0x51, 0x24, 0x26, 0x5a, 0x04, 0x0b, 0x52, 0x5a, 0xd7, 0x4a, 0x69, 0xdd, 0x20, 0xa5, 0x75,
	0xbd, 0x94, 0xd6, 0x0d, 0x52, 0x5a, 0x85, 0x94, 0x14, 0xba, 0x03, 0x1e, 0x45, 0x22, 0x19, 0x73,
	0x75, 0x21, 0xb4, 0xfb, 0x77, 0xa8, 0xf7, 0xa5, 0x54, 0x46, 0x44, 0xe7, 0x60, 0x63, 0x3f, 0xb3,
	0xeb, 0x3e, 0xd1, 0xcc, 0xcc, 0xe2, 0x67, 0x4e, 0xf8, 0x74, 0x74, 0x6a, 0x0d, 0x64, 0x00, 0x8a,
	0xfa, 0x58, 0x26, 0x62, 0x74, 0x9a, 0xd9, 0xc7, 0x20, 0x77, 0x1d, 0x9c, 0xd1, 0xa9, 0x35, 0x8e,
	0x33, 0x3a, 0xf5, 0x1f, 0x43, 0x7d, 0x74, 0x15, 0x46, 0x11, 0xde, 0xf8, 0x94, 0xc7, 0x82, 0x3e,
	0xd6, 0x66, 0x34, 0x46, 0xae, 0xa7, 0x2e, 0x52, 0xcf, 0xd9, 0xad, 0x22, 0x87, 0x63, 0xff, 0x87,
	0x0a, 0x34, 0x4f, 0xa7, 0x93, 0x17, 0x42, 0xc9, 0x6b, 0xf7, 0x6c, 0x42, 0xfd, 0xa5, 0x78, 0x2d,
	0xa2, 0x4c, 0x0e, 0x01, 0xf7, 0x3e, 0x40, 0x4f, 0xc5, 0xf3, 0x5e, 0x2c, 0x67, 0x89, 0xb6, 0x92,
	0x4a, 0x8c, 0xbb, 0x07, 0x1b, 0x05, 0x3a, 0x94, 0xc9, 0x2c, 0x25, 0x8d, 0x0e, 0x5b, 0xa6, 0xdd,
	0x47, 0xd0, 0x20, 0xc1, 0xa9, 0x07, 0xbb, 0xd5, 0x45, 0xb3, 0x10, 0xcf, 0xec, 0xb4, 0xff, 0xb3,
	0x03, 0x35, 0x52, 0xb9, 0x0e, 0xce, 0x30, 0xb0, 0x1a, 0x9d, 0x61, 0x90, 0xab, 0x76, 0xae, 0x53,
	0x5d, 0xbd, 0x59, 0x75, 0x6d, 0x45, 0xf5, 0x16, 0x34, 0x9e, 0x27, 0x42, 0x5d, 0xcc, 0x6d, 0x54,
	0x59, 0x84, 0xb7, 0x31, 0xa3, 0x0f, 0xa7, 0x01, 0xd7, 0x22, 0xe8, 0x69, 0xaf, 0xb1, 0xeb, 0xec,
	0x55, 0xd9, 0x32, 0xed, 0x3e, 0x80, 0xb5, 0x81, 0xe2, 0x17, 0xb1, 0x48, 0x74, 0x9f, 0x3e, 0xd2,
	0xa4, 0x83, 0x16, 0x49, 0x54, 0x37, 0x4c, 0x4f, 0xc5, 0x1b, 0x0f, 0x4c, 0x24, 0x11, 0xc0, 0x48,
	0xfa, 0x20, 0x19, 0x2b, 0x29, 0xa7, 0x5e, 0xc7, 0x44, 0x92, 0x85, 0xae, 0x0f, 0xdd, 0x61, 0xca,
	0xc4, 0x44, 0xcd, 0x42, 0x1d, 0x26, 0x17, 0x5e, 0x97, 0xa6, 0x17, 0xb8, 0x92, 0x1d, 0x37, 0x6f,
	0xb7, 0xe3, 0xbf, 0xa0, 0xd5, 0x9f, 0x29, 0x25, 0x92, 0xc9, 0x1c, 0x4d, 0x77, 0x2c, 0xa3, 0x3c,
	0x43, 0x71, 0xec, 0xde, 0x81, 0xea, 0xb1, 0x88, 0xad, 0xbb, 0x71, 0xe8, 0x3f, 0x85, 0xbb, 0xd9,
	0x8e, 0x85, 0x8c, 0xca, 0xb7, 0xb6, 0x56, 0xb7, 0xb6, 0xcc, 0xd6, 0x1f, 0x1d, 0xe8, 0x1e, 0x52,
	0xd1, 0x60, 0x54, 0x33, 0x56, 0x9c, 0xb7, 0x05, 0x0d, 0xbc, 0x06, 0x0f, 0xb2, 0x24, 0x34, 0xc8,
	0xdd, 0x81, 0xf6, 0x38, 0x8c, 0x45, 0xaa, 0x79, 0x3c, 0x25, 0x27, 0x56, 0x59, 0x41, 0xb8, 0xfb,
	0xc5, 0x1d, 0xc8, 0x8d, 0x9d, 0x03, 0xb7, 0x94, 0x4d, 0x76, 0x86, 0x15, 0xf7, 0x7c, 0x52, 0x2a,
	0x4b, 0xe4, 0xdb, 0xce, 0xc1, 0xbd, 0x62, 0x43, 0x3e, 0xc5, 0x4a, 0xc5, 0xeb, 0x31, 0x34, 0x8c,
	0x64, 0xaf, 0xb1, 0x5b, 0xd9, 0xeb, 0x1c, 0xfc, 0xa5, 0x58, 0x6f, 0x2e, 0xb4, 0x6f, 0xa6, 0x99,
	0x5d, 0x86, 0x8a, 0xfb, 0x97, 0x22, 0xd5, 0x14, 0x8b, 0x4d, 0xba, 0x60, 0x41, 0xb8, 0xbb, 0xd0,
	0x79, 0xc1, 0xd3, 0x5e, 0x14, 0x85, 0x3c, 0x99, 0x08, 0xaf, 0x45, 0x97, 0x2d, 0x53, 0xfe, 0x2f,
	0x0e, 0x6c, 0x9c, 0x09, 0x95, 0xca, 0x84, 0x47, 0x27, 0x22, 0x4d, 0xf9, 0x85, 0x70, 0xb7, 0xa1,
	0x75, 0x16, 0xf1, 0xb9, 0x50, 0xc3, 0x80, 0x22, 0xae, 0xcd, 0x72, 0x8c, 0xc1, 0x6c, 0xc6, 0xa5,
	0x94, 0x2d, 0x31, 0x18, 0x34, 0xd9, 0xd9, 0xa5, 0xf4, 0x58, 0xe0, 0x7e, 0xc7, 0xca, 0x85, 0x6f,
	0x6a, 0x0b, 0xbe, 0x79, 0x06, 0x2d, 0x2b, 0x10, 0x8d, 0x89, 0xc1, 0xf6, 0xb7, 0xc2, 0x38, 0x4b,
	0x57, 0xd8, 0xb7, 0xbf, 0x2c, 0xdf, 0x52, 0x14, 0xb8, 0xe6, 0x52, 0x81, 0xeb, 0xbd, 0xe6, 0x9a,
	0x2b, 0xb2, 0x4d, 0x9d, 0x59, 0xb4, 0xfd, 0x11, 0x34, 0x33, 0x6b, 0x60, 0xa9, 0x95, 0x89, 0x16,
	0x89, 0xb6, 0xd7, 0xcd, 0xa0, 0x51, 0x3a, 0x12, 0x49, 0x29, 0x8a, 0x10, 0xdd, 0x7e, 0x3f, 0xff,
	0x7f, 0xd0, 0xc5, 0x82, 0x92, 0xe5, 0xe6, 0x4d, 0xe5, 0xcf, 0x24, 0xb2, 0x2d, 0x7f, 0x04, 0xfc,
	0x5f, 0x2b, 0xd0, 0xed, 0xcb, 0x38, 0x96, 0x09, 0x13, 0x6f, 0xb8, 0x0a, 0x16, 0x02, 0xb2, 0xf2,
	0xae, 0x01, 0xe9, 0xbc, 0x55, 0x40, 0xfe, 0x07, 0xda, 0x99, 0xd2, 0xd4, 0xab, 0x92, 0xd9, 0xb7,
	0x8a, 0x2d, 0xe5, 0x8b, 0xb0, 0x62, 0x21, 0x96, 0x05, 0x0a, 0x42, 0xac, 0xbf, 0x4b, 0x65, 0x81,
	0x78, 0x66, 0xa7, 0x29, 0x9c, 0x64, 0x98, 0xe8, 0x97, 0x61, 0x1c, 0x6a, 0x5b, 0xff, 0x4a, 0x8c,
	0xff, 0xbd, 0x03, 0x6b, 0xa3, 0x79, 0xaa, 0x45, 0x9c, 0xb9, 0x63, 0x39, 0x95, 0xd7, 0xc1, 0x19,
	0x4b, 0x1b, 0x66, 0xce, 0x58, 0xfe, 0xc1, 0xe0, 0xda, 0x81, 0xf6, 0x30, 0x6b, 0xdc, 0xb6, 0xa3,
	0x16, 0x04, 0xaa, 0x1c, 0xa6, 0x63, 0x11, 0x4f, 0x23, 0xae, 0x05, 0xa5, 0x44, 0x8b, 0x95, 0x18,
	0x0c, 0x91, 0xd1, 0xec, 0xfc, 0x33, 0xdc, 0x6b, 0x52, 0x30, 0x83, 0xe8, 0xdc, 0x43, 0x19, 0xcc,
	0x29, 0xba, 0xda, 0x8c, 0xc6, 0xa8, 0xe1, 0x8c, 0x2b, 0x1e, 0x9b, 0xde, 0xd3, 0x66, 0x16, 0xb9,
	0xff, 0x05, 0xe8, 0x69, 0xcd, 0x27, 0x97, 0x68, 0x43, 0xaf, 0x43, 0xf9, 0xbf, 0x55, 0x6e, 0xd7,
	0x85, 0xe7, 0x59, 0x69, 0xa5, 0xff, 0x75, 0x05, 0xd6, 0x07, 0xa1, 0x88, 0x82, 0x41, 0xa8, 0x52,
	0x7d, 0x24, 0xdf, 0x24, 0xee, 0x53, 0x68, 0x32, 0x31, 0x91, 0x2a, 0x48, 0xbd, 0x0a, 0x39, 0xe0,
	0xaf, 0xc5, 0x39, 0x8b, 0x4b, 0xf7, 0xcd, 0x3a, 0x96, 0xad, 0xdf, 0xfe, 0x3f, 0x56, 0xa0, 0x89,
	0x7d, 0x12, 0x98, 0x6e, 0x56, 0x29, 0x77, 0xb3, 0x05, 0x4b, 0x39, 0x4b, 0x96, 0xf2, 0x1f, 0x41,
	0x73, 0xac, 0xc2, 0xf3, 0x99, 0x5e, 0xca, 0xf2, 0xca, 0x72, 0x16, 0x9c, 0x43, 0x6d, 0xcc, 0xd3,
	0xab, 0x92, 0x3b, 0xeb, 0xe4, 0xce, 0x4d, 0xa8, 0xbf, 0xe2, 0xd1, 0x4c, 0x64, 0x91, 0x4f, 0xc0,
	0xb8, 0xed, 0x48, 0x26, 0xf9, 0xe3, 0xc8, 0xa0, 0x45, 0x31, 0xb5, 0x65, 0x31, 0x33, 0xa8, 0x1f,
	0xf1, 0x30, 0x9a, 0xaf, 0xc4, 0xcc, 0x36, 0xb4, 0x5e, 0x85, 0x9a, 0x47, 0xa1, 0x9e, 0xdb, 0xef,
	0xe4, 0x98, 0x64, 0xf3, 0xf4, 0xaa, 0xdc, 0xc7, 0x0b, 0x02, 0xcb, 0x5b, 0x9f, 0x27, 0xc7, 0x42,
	0x1b, 0x3f, 0x50, 0x78, 0xd7, 0xd9, 0x02, 0xe7, 0x87, 0xd0, 0xe9, 0x5f, 0xf2, 0xa9, 0x16, 0xea,
	0x4f, 0xbf, 0xe1, 0x13, 0xa8, 0x53, 0x22, 0xbd, 0x43, 0x11, 0x79, 0x0f, 0xda, 0x64, 0x94, 0xe3,
	0xf0, 0x53, 0xea, 0x1e, 0x67, 0x4a, 0x06, 0xb3, 0x89, 0xce, 0xed, 0x53, 0x10, 0x78, 0x40, 0x98,
	0x1e, 0xce, 0xe6, 0xd6, 0xcd, 0x06, 0xf8, 0xcf, 0xa1, 0x33, 0x56, 0x82, 0xa7, 0x33, 0x25, 0x4e,
	0x38, 0x65, 0x94, 0x7d, 0xd9, 0x54, 0x6c, 0x05, 0x35, 0xaf, 0x9a, 0xfb, 0x00, 0xfd, 0xa3, 0xe7,
	0x5f, 0x4c, 0x43, 0x25, 0x7a, 0x46, 0x42, 0x95, 0x95, 0x18, 0xbf, 0x07, 0xb5, 0x13, 0xae, 0xae,
	0xde, 0xf6, 0x7d, 0x7a, 0xcd, 0x73, 0xcb, 0xff, 0x37, 0x74, 0x4c, 0xe7, 0xc1, 0x83, 0x52, 0xf7,
	0x01, 0x56, 0x78, 0x75, 0x95, 0x85, 0xfc, 0x7a, 0x71, 0x12, 0xd2, 0xcc, 0x4c, 0xfa, 0x7d, 0x58,
	0x7b, 0x5f, 0x86, 0x49, 0x5f, 0x26, 0x41, 0xa8, 0x43, 0x99, 0xe0, 0xc9, 0xe3, 0xf9, 0x54, 0x64,
	0xaf, 0x11, 0x1c, 0xa3, 0xf8, 0x81, 0x54, 0x13, 0x61, 0xca, 0x92, 0xb1, 0x5f, 0x89, 0xf1, 0xaf,
	0xe0, 0x5e, 0xd6, 0xd1, 0xf0, 0x30, 0x26, 0x3e, 0x9f, 0xa1, 0x17, 0xca, 0x8d, 0xb3, 0x72, 0x6b,
	0xe3, 0x74, 0x56, 0x1a, 0xa7, 0x97, 0x77, 0x1c, 0x8a, 0x80, 0x36, 0xcb, 0xa0, 0xff, 0x8d, 0x03,
	0x40, 0x2e, 0xa3, 0x6f, 0x93, 0x61, 0xd1, 0xe7, 0x46, 0x9b, 0x51, 0x5d, 0x62, 0x28, 0x44, 0x11,
	0x99, 0xaa, 0x9f, 0xa9, 0x5f, 0xe0, 0xdc, 0xa7, 0xb0, 0x96, 0x95, 0x78, 0x73, 0x4c, 0xf5, 0xe6,
	0x66, 0xb0, 0xb8, 0xd2, 0x7d, 0x06, 0x1b, 0x19, 0x91, 0x7d, 0xa1, 0x76, 0xf3, 0xe6, 0xe5, 0xb5,
	0x18, 0x71, 0xf8, 0x68, 0x2b, 0xd7, 0xfb, 0x82, 0xc0, 0xf7, 0x0a, 0x82, 0xec, 0xe0, 0x06, 0xcd,
	0x97, 0x29, 0xff, 0x21, 0x74, 0xc9, 0x0f, 0x26, 0xd7, 0x52, 0xfa, 0x3b, 0x85, 0x99, 0x69, 0xbc,
	0x8e, 0xff, 0xec, 0x08, 0xf9, 0xdf, 0x56, 0xa0, 0x7d, 0x22, 0x13, 0x7d, 0xd9, 0xc7, 0x46, 0xb9,
	0x0b, 0x9d, 0x1c, 0xe4, 0xbe, 0x29, 0x53, 0xb8, 0xc2, 0x84, 0x66, 0x80, 0x35, 0xca, 0xc6, 0x6b,
	0x99, 0x42, 0xe7, 0x62, 0xb3, 0xa0, 0xb4, 0x37, 0x39, 0x9a, 0x63, 0xf7, 0x21, 0xac, 0x93, 0x87,
	0xec, 0xfa, 0x9e, 0xb1, 0x49, 0x95, 0x2d, 0xb1, 0xfe, 0x77, 0x15, 0x68, 0x61, 0xcf, 0x1c, 0x6a,
	0x11, 0x63, 0x7a, 0x0d, 0x04, 0x3e, 0xcb, 0x6c, 0x7d, 0x25, 0x80, 0x9f, 0xc1, 0x15, 0xa5, 0x28,
	0xc9, 0xf1, 0xea, 0x3b, 0xbf, 0x7a, 0xdd, 0x3b, 0xdf, 0x9a, 0xf8, 0x4c, 0x85, 0x13, 0x61, 0xff,
	0x6e, 0x14, 0xc4, 0xed, 0x9d, 0xce, 0xff, 0xc9, 0xb1, 0xe5, 0x61, 0x74, 0x29, 0xa7, 0x2b, 0x75,
	0x73, 0x07, 0xdf, 0x0f, 0x14, 0xea, 0xc3, 0xc0, 0x8a, 0x2b, 0x08, 0xf3, 0x3f, 0x86, 0x97, 0xfe,
	0xc1, 0x1a, 0x84, 0x37, 0x1a, 0x28, 0x21, 0xe8, 0xdd, 0x6e, 0x3c, 0x9e, 0x63, 0xf7, 0x9f, 0x70,
	0x37, 0x1b, 0xe7, 0x8f, 0x7c, 0xdb, 0x60, 0x57, 0x27, 0x30, 0x47, 0x88, 0x14, 0xb1, 0x7d, 0xc5,
	0x65, 0xd0, 0xfd, 0x07, 0xdc, 0xb1, 0xc3, 0xe2, 0x18, 0xf3, 0xda, 0x5d, 0xe1, 0xf1, 0xd5, 0x94,
	0xf9, 0xc0, 0x6b, 0x53, 0xa9, 0x70, 0x17, 0x5f, 0x34, 0x38, 0xc3, 0x0a, 0x3f, 0xed, 0x40, 0xbb,
	0xf0, 0x2b, 0x98, 0x46, 0x96, 0x13, 0xbf, 0x05, 0x00, 0x00, 0xff, 0xff, 0x1c, 0x01, 0x26, 0x69,
	0xb6, 0x10, 0x00, 0x00,
}
